## +
## ===================================================================
## Copyright(C) 2010 - 2014 Basefount Software Limited.
## and/or its licensors.  All rights reserved.
##
## The coded instructions, statements, computer programs, and/or
## related material (collectively the "Data") in these files contain
## unpublished information proprietary to Basefount Technology
## Limitd. ("Basefount") and/or its licensors, which is
## protected by Chinese copyright law and by international treaties.
##
## The Data is provided for use exclusively by You. You have the right
## to use, modify, and incorporate this Data into other products for
## purposes authorized by the Basefount software license agreement,
## without fee.
##
## The copyright notices in the Software and this entire statement,
## including the above license grant, this restriction and the
## following disclaimer, must be included in all copies of the
## Software, in whole or in part, and all derivative works of
## the Software, unless such copies or derivative works are solely
## in the form of machine-executable object code generated by a
## source language processor.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
## BASEFOUNT DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR
## IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES
## OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR
## PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR
## TRADE PRACTICE. IN NO EVENT WILL BASEFOUNT AND/OR ITS LICENSORS
## BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
## DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF BASEFOUNTAIN
## AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY
## OR PROBABILITY OF SUCH DAMAGES.
##
## ===================================================================
## -

## +
## ===================================================================
##  Module Name: McdInitMenu.py
##
##  Description:
##    initialize the menu of Miarmy
##
## ===================================================================
## -

import maya.mel as mel
import maya.cmds as cmds

def McdReInitMenu():
    # reload button
    mel.eval("source McdMenu;");
    mel.eval("McdMenu;")

def McdInitMenu():
    try:
        cmds.setParent("MayaWindow")

        #add main menu
        try:
            cmds.menu("McdMenu", label= "Miarmy", tearOff = True, pmc = "McdReInitMenu()")
        except:
            pass
        try:
            cmds.menu("McdMenu", e = True, deleteAllItems = True)
        except:
            pass

        cmds.setParent("McdMenu", menu = True)

        cmds.menuItem("mcdmMGob", label = "Miarmy Ready!", c = "McdSelectMcdGlobal()");
        cmds.menuItem("mcdmMAcb", label = "Miarmy Contents Check", c = "McdAgentContainerBuild()")
        cmds.menuItem("mcdm12Imp", label = "Import without Namespace/Prefix", subMenu = True, tearOff = True );
        cmds.menuItem("mcdm12Ima", label = ".ma without name change", c = "Maya2012ImportMa()")
        cmds.menuItem("mcdm12Imb", label = ".mb without name change", c = "Maya2012ImportMb()")
        cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)

        ######################################################
        #cmds.menuItem("mcdm10", label = "Miarmy Solver", subMenu = True, tearOff = True)
        cmds.menuItem("mcdtoolsp", label = "Miarmy Tools...", c = "McdMiarmyToolsGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmglb", label = "Miarmy Global...", c = "McdMiarmyGlobalGUI()")
        cmds.menuItem("mcdpxG", label = "Physics Global...", c = "McdPhysicsGlobalGUI()")
        #cmds.menuItem("mcdm01", label = "Disable Solver");
        #cmds.menuItem("mcdm02", label = "Enable Solver");
        #check tool here
        cmds.setParent("..", menu = True)
        #function tools here
        cmds.setParent("..", menu = True)

        cmds.menuItem(divider = True)

        ######################################################
        cmds.menuItem("mcdrndroot", label = "RENDER", subMenu = True, tearOff = True );
        
        cmds.menuItem("mcdmMRnd", label = "Render Global...", c = "McdRenderSettingGUI()");
        #cmds.menuItem("mcdsrndfb", label = "Render Preview( 3delight )", c = "McdRenderBegin(-1)" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdrndmu", label = "Renderman", subMenu = True, tearOff = True );
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdexahs", label = "Export Rib Archive Files", c = "McdRenderBegin(1, 1)");
        cmds.menuItem(divider = True)
        #cmds.menuItem("mcdexahgo", label = "Export Rib Archive (Geo Only)", c = "McdRenderBegin(1, 1)");
        #cmds.menuItem("mcdexahs")

        cmds.menuItem("mcdrdatmu", label = "Add/Del Custom Attributes", subMenu = True, tearOff = True );
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdsubd", label = "Add Subd Attribute", c = "McdAddSubdAttr()" )
        cmds.menuItem("mcdcsubd", label = "Delete Subd Attribute", c = "McdDeleteSubdAttr()" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcddispb", label = "Add Displacement Bound Attribute", c = "McdAddDispBAttr()" )
        cmds.menuItem("mcdcdispb", label = "Delete Displacement Bound Attribute", c = "McdDeleteDispBAttr()" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmtt", label = "Add Matte Attribute", c = "McdAddMatteAttr()" )
        cmds.menuItem("mcdcmtt", label = "Delete Matte Attribute", c = "McdDeleteMatteAttr()" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdcum", label = "Add Custom String Attribute", c = "McdAddCustomStringAttr()" )
        cmds.menuItem("mcdccum", label = "Delete Custom String Attribute", c = "McdDeleteCustomStringAttr()" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdaagw", label = "Add Geometry Select Weight", c = "McdAddGeoWeightAttr()" )
        cmds.menuItem("mcddagw", label = "Delete Geometry Select Weight", c = "McdDeleteGeoWeightAttr()" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdarbaid", label = "Make Texture Random by Agent ID Only", c = "McdAddTexRandMethodToShaderAttr()" )
        cmds.menuItem("mcddrbaid", label = "Remove Texture Random by Agent ID Only", c = "McdDelTexRandMethodToShaderAttr()" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdcumsd", label = "Add Shader Hull String Attribute", c = "McdAddShaderHullAttr()" )
        cmds.menuItem("mcddelcumsd", label = "Delete Shader Hull String Attribute", c = "McdDeleteShaderHullAttr()" )
        cmds.setParent("..", menu = True)
        cmds.setParent("..", menu = True)
        
        
        cmds.menuItem("mcdarmain", label = "Arnold", subMenu = True, tearOff = True );
        cmds.menuItem("mcdar_cf", label = "Setup Current Frame", c = "McdARSetupCurrentFrame()")
        cmds.menuItem("mcdar_sq", label = "Setup Scene Sequence", c = "McdARSetupAllFrame()")
        #cmds.menuItem(divider = True) 
        #cmds.menuItem("mcdar_ctn", label = "Clear Random Trash", c = "McdClearTrashNode()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdaddaseed1", label = "Add Agent Seed Attr", c = "McdAddAgentSeedToSelected()")
        cmds.menuItem("mcddelaseed1", label = "Delete Agent Seed Attr", c = "McdDelAgentSeedToSelected()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdaddrtc", label = "Add Read Terrain Color Attr", c = "McdAddReadTCToSelected()")
        cmds.menuItem("mcddelrtc", label = "Delete Read Terrain Color Attr", c = "McdDelReadTCToSelected()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdaddraid", label = "Add Read Agent ID for Rand Tex Attr",    c = "McdAddReadAIDToSelected()")
        cmds.menuItem("mcddelraid", label = "Delete Read Agent ID for Rand Tex Attr", c = "McdDelReadAIDToSelected()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdaddctsa", label = "Add Control Texture Selection Attr",    c = "McdAddControlTexSelAttrNameSelected()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdarctn", label = "Clear Transh Nodes (Pink Problem)",    c = "McdDeleteShaderTrashNodes()")
        cmds.setParent("..", menu = True)
        
        
        cmds.menuItem("mcdvrmain", label = "V-Ray", subMenu = True, tearOff = True );
        cmds.menuItem("mcdvr_cf", label = "Setup Current Frame", c = "McdVRSetupCurrentFrame()")
        cmds.menuItem("mcdvr_sq", label = "Setup Scene Sequence", c = "McdVRSetupAllFrame()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdvrmain", label = "Rearrange .vrscene", c = "McdVRSceneRearrange()" );
        #cmds.menuItem("mcdvr_ecf", label = "Export Current Frame", c = "McdVRSceneExport(1)")
        #cmds.menuItem("mcdvr_esq", label = "Export Scene Sequence", c = "McdVRSceneExport()")
        #cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdvr_rmsq", label = "Replace Material Sequence", c = "McdVRSetupAllFrameReplaceMat()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdaddaseed3", label = "Add Agent Seed Attr", c = "McdAddAgentSeedToSelected()")
        cmds.menuItem("mcddelaseed3", label = "Delete Agent Seed Attr", c = "McdDelAgentSeedToSelected()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdvrcleardup", label = "Clear Duplicated Redundant Contents", c = "clearUselessObjAndShadersVRay()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdvr_pt", label = "Post Translate Python Tips", c = "McdShowPPTC()")
        
        
        cmds.setParent("..", menu = True)
        
        cmds.menuItem("mcdmd2main", label = "Mesh Drive 2.0", subMenu = True, tearOff = True );
        cmds.menuItem("mcdmd2_exp", label = "Export Cache", c = "McdExportMD2Cache()")
        cmds.menuItem("mcdmd2_setup", label = "Duplicate Meshes and Randomize Texture", c = "MDDuplicate()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd2_enable", label = "Enable Mesh Drive", c = "McdCreateMeshDriveNode(1, 1)")
        cmds.menuItem("mcdmd2_disable", label = "Disable Mesh Drive", c = "McdCreateMeshDriveNode(0)")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd2_clear", label = "Clear Contents", c = "McdMeshDrive2Clear()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd2_setbatch", label = "Setup Batch Render MEL", c = "McdSetupBatchRender()")
        cmds.menuItem(divider = True)
        cmds.setParent("..", menu = True)
        
        cmds.menuItem("mcdmd3main", label = "Mesh Drive 3.0", subMenu = True, tearOff = True );
        cmds.menuItem("mcdmd3_exp", label = "Export Cache", c = "McdExportMD2Cache()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd3_stp", label = "Duplicate Meshes and Randomize Texture", c = "MDDuplicate()")
        cmds.menuItem("mcdmd3_enable", label = "Enable Mesh Drive", c = "McdCreateMeshDriveIMNode(1, 1)")
        cmds.menuItem("mcdmd3_disable", label = "Disable Mesh Drive", c = "McdCreateMeshDriveIMNode(0)")
        cmds.menuItem("mcdmd3_clear", label = "Clear Contents", c = "McdMeshDrive2Clear()")
        cmds.menuItem(divider = True)
        
        cmds.menuItem("mcdrdatmu", label = "Keep Structure (Katana)", subMenu = True, tearOff = True );
        cmds.menuItem("mcdmd3_stpks", label = "1 Duplicate Meshes and Randomize Texture (Keep Structure)", c = "MDDuplicate(True, True)")
        cmds.menuItem("mcdmd3_enable2", label = "2 Enable Mesh Drive", c = "McdCreateMeshDriveIMNode(1, 1)")
        cmds.menuItem("mcdmd3_rars", label = "3 Rearrange Structure", c = "McdRearrangeDuplicatedMeshes()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd3_clear2", label = "Clear Contents", c = "McdMeshDrive2Clear()")
        cmds.setParent("..", menu = True)

        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd3_shapeout", label = "Put Shape Nodes Outside", c = "putAllShapeOutToGroup()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd3_show", label = "Show Geometries (Selected)", c = "displayGeoMD()")
        cmds.menuItem("mcdmd3_hide", label = "Hide Geometires", c = "hideGeoMD()")
        cmds.menuItem(divider = True)
        
        cmds.menuItem("mcdmd2tex", label = "Driven Mesh Texture Sequence", subMenu = True, tearOff = True );
        cmds.menuItem("mcdmd2texmark", label = "Mark Auto Texture Sequence (shape)", c = "McdMarkAutoTex()")
        cmds.menuItem("mcdmd2texclear", label = "Clear Auto Texture Sequence (shape)", c = "McdClearAutoTex()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd2texrule", label = "Create Texture Sequence Maker", c = "McdCreateTexSeqRule()")
        cmds.menuItem("mcdmd2texlkact", label = "Link make to action", c = "McdLinkAutoTexAction()")
        cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmd2shadermap", label = "Driven Mesh Shader Mapping (Selected)", c = "McdShaderMap()")
        
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdrrandtsa", label = "Re-Randomize Texture Select Agent", c = "McdReRandomizeSelAgentTextures()" )
        cmds.menuItem("mcdrandtd", label = "Randomize Textures (Duplicate)", c = "McdRandomizeTexturesDuplicate()" )
        cmds.menuItem("mcdaddaseed", label = "Add Agent Seed Attr", c = "McdAddAgentSeedToSelected()")
        cmds.menuItem("mcddelaseed", label = "Delete Agent Seed Attr", c = "McdDelAgentSeedToSelected()")
        
        cmds.menuItem("mcdabcmain", label = "Alembic Shader", subMenu = True, tearOff = True )
        cmds.menuItem("mcdabc_ctc", label = "Record Shader List", c = "McdCreateAlembicCache()")
        cmds.menuItem("mcdabc_cnonshd", label = "Clear without delete Shaders", c = "McdClearWithoutDelShaders()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdabc_impc", label = "Import Recorded Shader List", c = "McdImportAlembicCache()")
        cmds.setParent("..", menu = True)
        
        #cmds.menuItem(divider = True)
        #cmds.menuItem("mcdrardm", label = "Rearrange Duplicated Meshes", c = "McdRearrangeDuplicatedMeshes()")
        #cmds.menuItem("mcdracrm", label = "Clear Rearranged Meshes", c = "McdClearRearrangedMeshes()")
        
        cmds.setParent("..", menu = True)
        
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdhlst", label = "Hide List Options", subMenu = True, tearOff = True );
        cmds.menuItem("mcdadd2hl", label = "Add Selected Agents to Hide List", c = "McdHideListAdd()")
        cmds.menuItem("mcddelhl", label = "Clear Hide List", c = "McdHideListClear()")
        cmds.setParent("..", menu = True)
        
        cmds.menuItem("mcdgeos", label = "Geometry Select Weight", subMenu = True, tearOff = True );
        cmds.menuItem("mcdgeosa", label = "Add Geometry Select Weight Attr", c = "McdAddGeoWeightAttr()" )
        cmds.menuItem("mcdgeosd", label = "Delete Geometry Select Weight Attr", c = "McdDeleteGeoWeightAttr()" )
        cmds.setParent("..", menu = True)
        
        cmds.menuItem("mcdmkdgeom", label = "Mark Deforming Geometries", subMenu = True, tearOff = True );
        cmds.menuItem("mcdmkdgeo", label = "Add Deforming Attr", c = "McdAddDeformingAttr()" )
        cmds.menuItem("mcdumkdgeo", label = "Delete Deforming Attr", c = "McdDeleteDeformingAttr()" )
        cmds.setParent("..", menu = True)
        
        cmds.menuItem("mcdvr_ggtcf", label = "Generate Render Catalog File", c = "McdVRSetupCurrentFrame_ExportingGeoTexRandInfo()")
        cmds.menuItem("mcdfrgrnd2", label = "Foreground Render", c = "McdForgroundRender()")
        
        
        cmds.setParent("..", menu = True) # end of renderers
        
    

        cmds.menuItem(divider = True)

        ######################################################
        if int(mel.eval("getApplicationVersionAsFloat")) <= 2010:
            cmds.menuItem("mcdmMAgM", label = "Agent Manager...", c = "McdAgentManagerOldGUI()")
        else:
            cmds.menuItem("mcdmMAgM", label = "Agent Manager...", c = "McdAgentManagerGUI()")
            
        cmds.menuItem("mcdmTerr", label = "Terrain Manager...", c = "McdTerrainManagerGUI()")
        cmds.menuItem("mcdmAgtPt", label = "Particle Emit Manager...", c = "McdAgentParticleEmitterGUI()")
        cmds.menuItem("mcdgvisM", label = "Geometry Hide Manager...", c = "McdGeoVisManagerGUI()")
        cmds.menuItem("mcdgresd", label = "Re-seed Manager...", c = "McdReSeedManagerGUI()")
        cmds.menuItem("mcdbkjloc", label = "Bake Joint Locator Manager...", c = "McdBakeJointLocManagerGUI()")
        cmds.menuItem(divider = True)

        ######################################################
        cmds.menuItem("mcdmViewer", label = "Viewers", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmMAgV", label = "Agent Viewer...", c = "McdAgentViewerGUI()")
        cmds.menuItem("mcdmTrMV", label = "Transition Map Viewer...", c = "McdTransitionMapViewerGUI()")
        cmds.menuItem("mcdmBrLV", label = "Brain Logic Viewer...", c = "McdBrainViewerGUI()")
        cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)

        ######################################################
        cmds.menuItem("mcdmVis", label = "Agent Visualization", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmRTDis", label = "Mark Selected Geo Real Time Displayable", c = "McdAddRTDisplayFlag()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmSound", label = "Feel Range Switch", c = "soundRangeSwitch()")
        # cmds.menuItem("mcdmVision", label = "Vision Range Switch", c = "visionRangeSwitch()")
        cmds.menuItem("mcdmHP", label = "HP/MP Bar Switch", c = "HPSwitch()")
        cmds.menuItem("mcdmAction", label = "Action Info Switch", c = "actionSwitch()")
        cmds.menuItem("mcdmMaster", label = "Master -> Follower Switch", c = "actionSwitch()")
        cmds.menuItem("mcdmSyncWave", label = "Sync Wave Switch", c = "actionSwitch()")
        cmds.menuItem("mcdmSyncIK", label = "Auto IK Handle Switch", c = "actionSwitch()")
        cmds.menuItem("mcdmCCT", label = "CCT Switch", c = "cctSwitch()")
        cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)

        ######################################################
        cmds.menuItem("mcdm1", label = "Setup Rig", subMenu = True, tearOff = True)
        #cmds.menuItem("mcdm12", label = "Import Template", subMenu = True, tearOff = True)
        #cmds.menuItem("mcdmcarm", label = "Arm", c = "HbImportTemple('Arm')")
        #cmds.menuItem("mcdmcleg", label = "Leg", c = "HbImportTemple('Leg')")
        #cmds.menuItem("mcdmcspline", label = "Spine", c = "HbImportTemple('Spline')")
        #cmds.setParent("..", menu = True)
        #
        #cmds.menuItem("mcdm12pp", label = "Import Template (Preset Pose)", subMenu = True, tearOff = True)
        #cmds.menuItem("mcdmcapp", label = "Arm", c = "HbImportTemplePreset('Arm')")
        #cmds.menuItem("mcdmclpp", label = "Leg", c = "HbImportTemplePreset('Leg')")
        #cmds.menuItem("mcdmcsplpp", label = "Spine", c = "HbImportTemplePreset('Spline')")
        #cmds.setParent("..", menu = True)
        #
        #cmds.menuItem("mcdm13", label = "Setup Rig", c = "HbSetupWrapper()")
        #cmds.menuItem(divider = True)
        cmds.menuItem("mcdm138", label = "Import Miarmy Rig", c = "McdImportStdBipedRig()")
        cmds.menuItem("mcdm132", label = "Import Standard Bone Tree", c = "McdImportStdBipedBone()")

        # cmds.menuItem("mcdm111", label = "Check Naming")
        # cmds.menuItem("mcdm112", label = "Check Isolate bone")

        cmds.setParent("..", menu = True)
        
        ######################################################
        #function tools here
        cmds.setParent("..", menu = True)


        ######################################################
        cmds.menuItem("mcdm2", label = "Original Agents", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmcsgaa", label = "Create Original Agent", c = "McdParseRootBoneCreateOAgent(0)")
        cmds.menuItem(divider = True)
        
        cmds.menuItem("mcdoaftbo", label = "Fine Tune Orient Selected Bone Shapes", c = "McdAdjustBSOrt()")
        cmds.menuItem("mcdoasbtree1", label = "Scale Value Selected Bones Shapes", c = "McdAdjustBSScale(0)")
        cmds.menuItem("mcdoasbtree2", label = "Scale Up/Down Selected Bones Shapes", c = "McdAdjustBSScale(1)")
        
        cmds.menuItem(divider = True)
        
        cmds.menuItem("mcdmsoast", label = "Save Original Agent Setup", c = "McdSaveOAAttrSetup()")
        cmds.menuItem("mcdmloast", label = "Load Original Agent Setup", c = "McdLoadOAAttrSetup()")
        
        cmds.menuItem(divider = True)
        cmds.menuItem("mslupg", label = "Upgrade", c = "McdUpgradeOAgent()")
        cmds.menuItem(divider = True)
        cmds.menuItem("etblshfbc", label = "Establish Full Bone Chain (Select Root)", c = "EstablishFullBoneChain()")
        cmds.menuItem("mslskbone", label = "Select Skin Bone and Geo", c = "McdSelectSkinBone()")
        #cmds.menuItem("mslskbs", label = "Bind Skin", c = "McdBindSkinPreset()")

        cmds.menuItem(divider = True)
        cmds.menuItem("hbonebox1", label = "Hide/Unhide Bone Shape", c = "McdSetBoneShapeVis()")
        cmds.menuItem("hbonebox2", label = "Hide/Unhide Physical Joint", c = "McdSetPhyJointVis()")
        cmds.menuItem("mcdmrcsgaa", label = "Re-create Origianl Agent", c = "McdParseRootBoneReCreateOAgent()")
        cmds.menuItem("mcdmdsgaa", label = "Delete Origianl Agent", c = "McdParseRootBoneDeleteOAgent()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdcbb", label = "Create Bounding Box for Agent", c = "MakeBoundingBoxForOriginalAgent()")
        cmds.menuItem(divider = True)
        cmds.menuItem("addaiml", label = "Add Aim Rotation Limit Attr", c = "AddAimRotationLimitAttr()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmoarb", label = "Go Original Pose")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdcgsoa", label = "Send Active Geo to Original Agent", c = "CopyGeoFromSetupAndSkinToOA()")
        cmds.setParent("..", menu = True)
        #function tools here
        cmds.setParent("..", menu = True)


        ######################################################
        cmds.menuItem("mcdmplc", label = "Placement", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmcplcn", label = "Create Placement Node", c = "McdCreatePlacementNode()")
        cmds.menuItem("mcdmcplcnml", label = "Create Placement Node from", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmcplmsh", label = "Mesh", c = "McdCreatePlacementNodeMesh()" )
        cmds.menuItem("mcdmcpllat", label = "Lattice", c = "McdCreatePlacementNodeLattice()" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmcplpt2d", label = "Particle 2D", c = "McdCreatePlacementNodeParticle(0)" )
        cmds.menuItem("mcdmcplpt3d", label = "Particle 3D", c = "McdCreatePlacementNodeParticle(1)" )
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmcplnpt3d", label = "nParticle 3D", c = "McdCreatePlacementNodeNParticle(1)" )
        
        cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmmkdz", label = "Mark Mesh as Delete Zone", c = "McdAddDeleteZoneToSelect()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmplcgui", label = "Placement Editor ...", c = "McdPlacementEditorGUI()") # desiable undo
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmplace", label = "Place", c = "placementAgent()") # disable undo
        cmds.menuItem("mcdmplcsl", label = "Place (from Selected)", c = "placementAgentFromSelect()") # disable undo
        cmds.menuItem("mcdmdeplace", label = "De-Place (Delete All Agents) ", c = "dePlacementAgent()")
        
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmsplace", label = "Simple Place", c = "simplePlacementAgent()") # disable undo
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmmkoagt", label = "Mark Dead Selected Agents", c = "McdMarkAgentOut()")
        cmds.menuItem("mcdunmmkoagt", label = "Clear Mark Dead for Selected Place", c = "McdUnmarkAgentOut()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdinvplace", label = "Inverse Place", c = "inversePlacementAgent()")
        cmds.menuItem(divider = True)
        
        cmds.menuItem("mcddupplace", label = "Duplicate Place Node", c = "duplicatePlacement()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdterrain", label = "Attach Terrain", c = "McdAttachTerrain()")
        cmds.menuItem("mcddtrn", label = "Detach Terrain", c = "McdDetachTerrain()")
        
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmesh", label = "Attach Range Mesh", c = "McdAttachRangeMesh()")
        cmds.menuItem("mcddmesh", label = "Detach Range Mesh", c = "McdDetachRangeMesh()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdcrvbound", label = "Attach Curve", c = "McdAttachCurve()" )
        cmds.menuItem("mcdcrvflw", label = "Detach Curve", c = "McdDetachCurve()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdattpar", label = "Attach Particle", c = "McdAttachParticle()" )
        cmds.menuItem("mcddtcpar", label = "Detach Particle", c = "McdDetachParticle()" )
        cmds.menuItem(divider = True)
        
        cmds.menuItem("mcdupdtex2d", label = "Update Texture Place 2D", c = "McdUpdateTexPlacement(2)")
        cmds.menuItem("mcdupdtex3d", label = "Update Texture Place 3D", c = "McdUpdateTexPlacement(3)")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdclearpluv", label = "Lock Place on Mesh by UV", c = "storeAndSetupUVLock()")
        cmds.menuItem("mcdlockpluv", label = "Clear UV Lock Info", c = "clearUVLockPlace()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdacrvbound", label = "Attach Aim Target Curve", c = "McdAttachAimCurve()" )
        cmds.menuItem("mcdacrvflw", label = "Detach Aim Target Curve", c = "McdDetachAimCurve()")
        
        cmds.menuItem("mcdmmkoagtly", label = "(Layer) Mark Dead Selected Agents", c = "McdMarkAgentOutLayer()")
        #cmds.menuItem("mcdunmmkoagtly", label = "(Layer) Clear Mark Dead for Selected Place", c = "McdUnmarkAgentOutLayer()")
        
        #check tool here

        #function tools here
        cmds.setParent("..", menu = True)

        ######################################################
        cmds.menuItem("mcdm5", label = "Actions", subMenu = True, tearOff = True)
        #cmds.menuItem("mcdCrActall", label = "Action All Control GUI(beta)", c = "McdNewActionMasterGUI()")
        #cmds.menuItem(divider = True)
        cmds.menuItem("mcdCrActs", label = "Create Action", c = "McdCreateActionCmd()")
        cmds.menuItem("mcdActEd", label = "Action Editor...", c = "McdActionEditorGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem("McdCrActPx", label = "Create Action Proxy", c = "McdCreateActionProxyCmd()")
        cmds.menuItem("mcdActPxEd", label = "Action Proxy Editor...", c = "McdActionProxyEditorGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem("McdCrStroy", label = "Create Story List", c = "McdCreateStoryListCmd()")
        cmds.menuItem("mcdStoryEd", label = "Story List Editor...", c = "McdStoryListEditorGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdActSyEd", label = "Action Synchronization Editor...", c = "McdActionSyncEditorGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdClCD", label = "Clear Hook Custom Data", c = "McdClearActionCDCmd()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdbactgeo", label = "Bake Gemoetry Action", c = "McdBakeGeoAction()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdcikoffl", label = "Create IK Offset Locator", c = "McdCreateIKOffsetLocator()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdrnmgn", label = "Renewal Action Setup Manager", c = "McdRenewManagerGUI()")
        #insert tools here
        cmds.setParent("..", menu = True)
        #function tools here
        cmds.setParent("..", menu = True)

        ######################################################
        cmds.menuItem("mcdm6", label = "Transition Map", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmSAMo", label = "Move Tool", c = "McdStateContextToolOn()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdCStat", label = "Create State", c = "McdCreateStateCmd()")
        cmds.menuItem("mcdCAct", label = "Create Transition", c = "McdCreateActionShellCmd()")
        #cmds.menuItem(divider = True)
        #cmds.menuItem("mcdaeag", label = "Add/Edit Action Group", c = "McdAssignActionGrp()")
        #cmds.menuItem("mcdcagn", label = "Cancel Action Group", c = "McdCancelActionGrp()")
        #cmds.menuItem(divider = True)
        #cmds.menuItem("mcdaebag", label = "Add/Edit Blend Group", c = "McdAssignBlendGrp()")
        #cmds.menuItem("mcdcbagn", label = "Cancel Blend Group", c = "McdCancelBlendGrp()")


        #function tools here
        cmds.setParent("..", menu = True)

        ######################################################
        cmds.menuItem("mcdmkp", label = "Knowledge Perception", subMenu = True, tearOff = True)
        cmds.menuItem("mcdksspc", label = "Create Solver Space", c = "McdCreateSolverSpace()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdkpcc", label = "Create Road From Curve", c = "McdCreateRoad()")
        cmds.menuItem("mcdkpat", label = "Attach Road to Terrain", c = "McdAttachRoadToTerrain()")
        cmds.menuItem("mcdrdmd", label = "Build 2 Sides Road", c = "McdBuild2SidesRoad()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcd3dp", label = "Create 3D Path", c = "McdCreatePath()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdkc", label = "Create Bound", c = "McdCreateBound()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdkpcswff", label = "Create Spot + Force Field Combo", c = "McdCreateSpotWithForceField()")
        cmds.menuItem("mcdkpcs", label = "Create Spot", c = "McdCreateSpot()")
        cmds.menuItem("mcdkpcff", label = "Create Force Field", c = "McdCreateSpotOnlyForceField()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdkpwind0", label = "Create Wind", c = "McdCreateWind()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdkpcz", label = "Create Zone", c = "McdCreateZone()")
        cmds.menuItem("mcdkpgzn", label = "Select Zone Node", c = "McdGetZoneNode()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdvarm", label = "Maya Attributes", subMenu = True, tearOff = True)
        cmds.menuItem("mcdvarh", label = "Create Attribute Host", c = "McdVarHostCreate()")
        cmds.menuItem("mcdvara", label = "Attribute Manager...", c = "McdVarManagerGUI()")
        cmds.menuItem("mcdvarlk", label = "Attribute Host Linker...", c = "McdGroupVarEditorGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdvargc", label = "Create Attribute Proxy Node", c = "McdCreateGroupVar()")
        cmds.menuItem("mcdvarapx", label = "Attribute Proxy Manager...", c = "McdVarPxyManagerGUI()")
        cmds.menuItem("mcdvarge", label = "Attribute Proxy Linker...", c = "McdGroupVarEditorGUI()")
        cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdfmtatt", label = "Mark Formation Flag", c = "McdMarkFormation()")
        cmds.menuItem("mcdfmtael", label = "Select Associate Formation Node", c = "McdSelectFormation()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdfmrbmsh", label = "Mark Repel/Bound Mesh", c = "McdMarkRepalBoundMesh()")
        cmds.menuItem(divider = 1)
        cmds.menuItem("mcdmsjtid", label = "Add Locator Jump Target ID", c = "McdAddLandTargetIDAttr()")
        cmds.menuItem("mcdamaid", label = "Add Mesh Attach ID", c = "McdAddMeshAttachIDAttr()")
        #check tool here
        cmds.setParent("..", menu = True)
        #function tools here
        cmds.setParent("..", menu = True)

        ######################################################
        cmds.menuItem("mcdm7", label = "Logic and Decision", subMenu = True, tearOff = True)
        cmds.menuItem("mcdCrDes", label = "Make Decision", c = "McdCreateDecisionCmd()")
        cmds.menuItem("mcdLgcV", label = "DecisionNode Editor ...", c = "McdDecisionEditorGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdLgMode1", label = "Swith to Language Mode", c = "McdSetAllLggMode()")
        cmds.menuItem("mcdLgMode2", label = "Swith to Channel Mode", c = "McdSetAllOldMode()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdLgDS", label = "Copy and Map Decision", c = "McdBuildBrainShadow()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdLgPst", label = "Preset Logic Behavior" , subMenu = True, tearOff = True)
        cmds.menuItem("mcdLgPst1", label = "Blank Priority", c = "McdPLB_BlankPriority()")
        cmds.menuItem("mcdLgPst2_", label = "Avoid Collide by Sphere (simple)", c = "McdPLB_collideAvoidSoundSimple()")
        cmds.menuItem("mcdLgPst3", label = "Avoid Spot", c = "McdPLB_AvoidSpot()")
        cmds.menuItem("mcdLgPst4", label = "Follow Spot", c = "McdPLB_FollowSpot()")
        cmds.menuItem("mcdLgPst5", label = "Follow Field", c = "McdPLB_FollowField()")
        cmds.menuItem("mcdLgPst6", label = "BlockVision if in bound", c = "McdPLB_InBoundBlkVis()")
        cmds.menuItem("mcdLgPst7", label = "Follow Terrain", c = "McdPLB_FollowTerrain()")
        cmds.menuItem("mcdLgPst8", label = "Follow RoadFlow", c = "McdPLB_RoadFlow()")
        cmds.menuItem("mcdLgPst9", label = "Follow Road", c = "McdPLB_Road()")
        cmds.menuItem("mcdLgPst2", label = "Avoid Collide by Sphere (complex action)", c = "McdPLB_collideAvoidSound()")
        cmds.setParent("..", menu = True)
        
        cmds.setParent("..", menu = True)
        #function tools here
        cmds.setParent("..", menu = True)


        ######################################################
        cmds.menuItem("mcdm8", label = "Physics", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmoas", label = "Clothes", subMenu = True, tearOff = True)
        # physx function here
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmattc", label = "Attach Cloth (Select Pin Points)", c = "McdAttachClothCmd()")
        cmds.menuItem("mcdclrclo",label = "Clear Cloth", c = "McdClearCloth()")
        #cmds.menuItem(divider = True)
        #cmds.menuItem("mcdclothp", label = "Cloth Presets", subMenu = True, tearOff = True)
        #cmds.menuItem("mcdclada", label = "Flag", c = "McdClothPresetFlag()")
        #cmds.menuItem("mcdcldea", label = "Cloak", c = "McdClothPresetCloak()")
        #cmds.setParent("..", menu = True)
        cmds.setParent("..", menu = True)
        cmds.menuItem("mcdffi", label = "Force Fields", subMenu = True, tearOff = True)
        cmds.menuItem("mcdcffp",label = "Create Push Field", c = "createPxPushFF()")
        cmds.menuItem("mcdcffl",label = "Create Pull Field", c = "createPxPullFF()")
        cmds.menuItem("mcdcffv",label = "Create Vortex Field", c = "createPxVortexFF()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdkpwind", label = "Create Wind Field", c = "McdCreateWind()")
        cmds.setParent("..", menu = True)
        cmds.menuItem("mcdkpr", label = "Kinematic Primitives", subMenu = True, tearOff = True)
        cmds.menuItem("mcdckpb",label = "Create Box Kine Prim", c = "createPxKineBox()")
        cmds.menuItem("mcdckps",label = "Create Sphere Kine Prim", c = "createPxKineSphere()")
        cmds.menuItem("mcdmkkpm",label = "Mark Kine Prim Mesh", c = "createMarkKineMesh()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmkbm",label = "Mark Buoyancy Mesh", c = "createMarkBuoyancyMesh()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdckpbfs",label = "Create Box Kine Prim from Selection", c = "createPxKineBoxSels()")
        cmds.setParent("..", menu = True)
        cmds.menuItem("mcdrbd", label = "RBD Emitter", subMenu = True, tearOff = True)
        cmds.menuItem("mcdcrbdps",label = "Create RBD Emitter", c = "createPxRBDEmitter()")
        cmds.menuItem("mcdmAgtrbd", label = "Agent RBD Emit Editor...", c = "McdAgentRBDEmitterGUI()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdbkrbd",label = "Bake RBD Emitter", c = "BakeRBDObjects()")
        cmds.setParent("..", menu = True)
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdddb",label = "Create PhysX Debug Node", c = "")
        #function tools here
        cmds.setParent("..", menu = True)

        ######################################################
        cmds.menuItem("mcdm9", label = "Debug Tools", subMenu = True, tearOff = True)
        cmds.menuItem("mcdam",label = "Agent Match", c = "oAgentMatchAgent()")
        cmds.menuItem("mcdar",label = "Agent Return", c = "oAgentResume()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdcpdn",label = "Create PhysX Debug Node", c = "createPhyDebugNode()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdtrag1",label = "Agent -> Group Info", c = "McdFromAgentToAgentGroup(True)")
        cmds.menuItem("mcdtrpl1",label = "Agent -> Place Node", c = "McdFromAgentToPlace(True)")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdckshader",label = "Mesh Drive 3.0 Shader", c = "McdCheckShaderForMD3()")
        cmds.menuItem("mcdendpg", label = "End Progress", c = 'cmds.progressWindow(endProgress=1);')


        #function tools here
        cmds.setParent("..", menu = True)

        ######################################################
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdm4", label = "Save/Load Assets", subMenu = True, tearOff = True)
        cmds.menuItem("mcdenvlist", label = "Initial Paths VAR", c = "McdSaveLoadEnvVar()")
        cmds.menuItem("mcdmsvaws", label = "Select Global and Contents", c = "McdExportMiarmyAll()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmsva", label = "Export Agent", c = "McdExportAgent()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdLgSave", label = "Save Logic", c = "McdSaveLogic()")
        cmds.menuItem("mcdLgLoad", label = "Load Logic", c = "McdLoadLogic()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdAcSave", label = "Save Action", c = "McdSaveAction()")
        cmds.menuItem("mcdAcLoad", label = "Load Action", c = "McdLoadAction()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdSMSave", label = "Save Story", c = "McdSaveStory()")
        cmds.menuItem("mcdSMLoad", label = "Load Story", c = "McdLoadStory()")
        cmds.menuItem(divider = True)
        cmds.menuItem("mcdOASave", label = "Save Original Agent", c = "McdSaveOA()")
        cmds.menuItem("mcdOALoad", label = "Load Original Agent", c = "McdLoadOA()")
        cmds.menuItem(divider = True)

        cmds.setParent("..", menu = True)
        cmds.setParent("..", menu = True)

        cmds.menuItem(divider = True)
        cmds.menuItem("mcdmInst", label = "Installation", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmIns", label = "Re-Link Miarmy", c = "miarmyInstallWin()")
        cmds.menuItem("mcdmUnin", label = "Un-Link Miarmy", c = "McdUnlinkMiarmy()")
        cmds.menuItem("mcdRdF", label = "3delight Setup", subMenu = True, tearOff = True)
        cmds.menuItem("mcdmdlce", label = "Check Renderer Status", c = "McdCheckRendererStatus()")
        cmds.menuItem("mcdmdlcs", label = "Compile Shaders", c = "McdCompileShaders()")
        cmds.menuItem("mcdmDelit", label = "Remove 3Delight.dll", c = "McdRemoveDelight()")
        cmds.setParent("..", menu = True)
        cmds.setParent("..", menu = True)
        cmds.menuItem("mcdmHelp", label = "Help", c = 'cmds.launch(web="https://basefount.atlassian.net/wiki/display/MDE")')
        cmds.menuItem("mcdmAbout", label = "About Miarmy", c = "McdAboutMiarmy()")

    except:
        print "Initialize menu skipped or failed."


def McdAboutMiarmy():
    cmds.confirmDialog(t = "About Basefount Miarmy(R)", m = "Miarmy(R) Crowd For Maya \n\n\
                            Current Version: 5.0.19 \n\n\
                            Basefount Technology (Hong Kong) Limited.\n\n\
                            2011-2016(C) All rights reserved.\n\
                            (EN) www.basefount.com\n\
                            (CH) www.basefount.cn\n\
                            (JP) www.studiogx.com/ja/miarmy")


