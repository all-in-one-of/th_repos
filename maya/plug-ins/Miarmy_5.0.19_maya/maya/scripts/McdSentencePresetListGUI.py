## +
## ===================================================================
## Copyright(C) 2010 - 2014 Basefount Software Limited.
## and/or its licensors.  All rights reserved.
##
## The coded instructions, statements, computer programs, and/or
## related material (collectively the "Data") in these files contain
## unpublished information proprietary to Basefount Software
## Limitd. ("Basefount") and/or its licensors, which is
## protected by Chinese copyright law and by international treaties.
##
## The Data is provided for use exclusively by You. You have the right 
## to use, modify, and incorporate this Data into other products for 
## purposes authorized by the Basefount software license agreement, 
## without fee.
##
## The copyright notices in the Software and this entire statement, 
## including the above license grant, this restriction and the 
## following disclaimer, must be included in all copies of the 
## Software, in whole or in part, and all derivative works of 
## the Software, unless such copies or derivative works are solely 
## in the form of machine-executable object code generated by a 
## source language processor.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. 
## BASEFOUNT DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR
## IMPLIED WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES
## OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR 
## PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR 
## TRADE PRACTICE. IN NO EVENT WILL BASEFOUNT AND/OR ITS LICENSORS 
## BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, 
## DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF BASEFOUNTAIN 
## AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY 
## OR PROBABILITY OF SUCH DAMAGES.
##
## ===================================================================
## -

## +
## ===================================================================
##  Module Name: McdSentencePresetListGUI
##
##  Description:
##    for autofill sentences
##
## ===================================================================
## -

import maya.cmds as cmds
import maya.mel as mel
from McdGeneral import *
from McdDecisionEditorGUI import *

def McdSentencePresetListGUI(sentenceID, dcNode):
    
    winName = "McdSentencePresetList"
    if cmds.window(winName, ex = True):
        cmds.deleteUI(winName)
    
    cmds.window(winName, title = "Autofill Fuzzy Logic",rtf =True,menuBar=True, width=250)
    
    cmds.menu( label='Options')
    cmds.menuItem( label='Help' )
    cmds.menuItem( divider=True )
    cmds.menuItem( label='Exit', c = "McdExitSentencePresetList()" )
    
    form = cmds.formLayout()
    tabs = cmds.tabLayout(innerMarginWidth=5, innerMarginHeight=5)
    cmds.formLayout( form, edit=True, attachForm=((tabs, 'top', 0), (tabs, 'left', 0), \
                                                (tabs, 'bottom', 0), (tabs, 'right', 0)) )
    
    #--------------------------  Main GUI  --------------------------#
    child0 = cmds.columnLayout(adj = True)
    
    cmds.rowColumnLayout(nc = 2, cw = [(1,100),(2,350)])
    cmds.text(l = "Type", fn = "smallBoldLabelFont", align = "left", width = 250)
    cmds.text(l = "Language", fn = "smallBoldLabelFont", align = "left", width = 250)
    
    
    sentencePresetTypeList = appendSentenceTypes()
    
    cmds.textScrollList("mcdaffllgg_tsl", numberOfRows = len(sentencePresetTypeList), nr = 32, append = sentencePresetTypeList, \
                                    sc = 'McdUpdateSubSentenceDetail(' + str(sentenceID) + ', "' + dcNode + '")')
        
    cmds.textScrollList("mcdaffl_tsl", dcc = 'McdAutoFillSentenceDetail(' + str(sentenceID) + ', "' + dcNode + '")')
        
    cmds.text(l = "", align = "left")
    cmds.text(l = "Note: Double click for choosing", align = "left")
    
    cmds.setParent("..")
    cmds.setParent("..")
    
    
    #------------------------- Cricial Help -------------------------#
    child1 = cmds.columnLayout(adj = True)
    cmds.text(l = "# You can add your own presets easily \nin McdSentencePresetListGUI.py Python script\n", align = "left", width = 250)
    cmds.text(l = "# Please make backup for yourself modification\nNew version will override them.", align = "left", width = 250)
    cmds.button(l = "Check detailed help", h = 40)
    cmds.setParent( '..' )
    
    #------------------------- table layout -------------------------#
    cmds.tabLayout( tabs, edit=True,tabLabel=((child0, "Logic Preset"),(child1, "Quick Tips")))
    cmds.showWindow(winName)


def McdExitSentencePresetList():
    try:
        cmds.deleteUI("McdSentencePresetList")
    except:
        pass


def appendSentenceTypes():
    sentencePresetList = []
    sentencePresetList.append("General")
    sentencePresetList.append("Sphere Range")
    sentencePresetList.append("Frustum Range")
    sentencePresetList.append("Terrain")
    sentencePresetList.append("Maya Geometry")
    sentencePresetList.append("Road")
    sentencePresetList.append("Path")
    sentencePresetList.append("Bound")
    sentencePresetList.append("Spot")
    sentencePresetList.append("Zone")
    sentencePresetList.append("Wind")
    sentencePresetList.append("Master")
    sentencePresetList.append("Formation")
    sentencePresetList.append("Place Formation")
    sentencePresetList.append("Maya Particles")
    sentencePresetList.append("Move Rotate Speed")
    sentencePresetList.append("Body Tilt")
    sentencePresetList.append("Maya Field")
    sentencePresetList.append("Maya Fluid")
    sentencePresetList.append("MEL & Python")
    sentencePresetList.append("Collision Detection")
    sentencePresetList.append("RBD Emitter")
    sentencePresetList.append("Noise ID")
    sentencePresetList.append("Cyclical Sine")
    sentencePresetList.append("Cyclical Time")
    sentencePresetList.append("Agent ID")
    sentencePresetList.append("Interal Variable")
    sentencePresetList.append("Scene Info")
    sentencePresetList.append("Animation")
    sentencePresetList.append("Dynamics")
    sentencePresetList.append("Traffic")
    
    
    
    
    return sentencePresetList
    
def appendSentences(txt):
    
    sentencePresetList = []
    
    #-------------------------- preset detail -----------------------#
    if txt == "Sphere Range":
        sentencePresetList.append("-----Pure Language-----")
        sentencePresetList.append("someone in my sphere and left-right angle from XX to XX")
        sentencePresetList.append("someone in my sphere and left-right angle from XX to XX    blur XX:XX")
        sentencePresetList.append("someone in my sphere and up-down angle from XX to XX")
        sentencePresetList.append("someone in my sphere and up-down angle from XX to XX")
        sentencePresetList.append("someone in my sphere with distance < XX    blur XX")
        sentencePresetList.append("someone in my sphere and his sphere color id is XX")
        sentencePresetList.append("color id of my sphere is XX")
        sentencePresetList.append("someone in my sphere aim to left-right angle from XX to XX blur XX:XX")
        sentencePresetList.append("someone in my sphere aim to up-down angle from XX to XX blur XX:XX")
        sentencePresetList.append("someone in my sphere with relative speedX from XX to XX")
        sentencePresetList.append("someone in my sphere with relative speedX > XX")
        sentencePresetList.append("someone in my sphere with relative speedY from XX to XX")
        sentencePresetList.append("someone in my sphere with relative speedZ from XX to XX")

        sentencePresetList.append("")

        sentencePresetList.append("-----Preset Logic-----")
        sentencePresetList.append("detect someone on my left")
        sentencePresetList.append("detect someone on my right")
        sentencePresetList.append("detect someone in front")
        sentencePresetList.append("detect someone near, distance less than 20")
        sentencePresetList.append("detect someone face to my left")
        sentencePresetList.append("detect someone face to my right")
        sentencePresetList.append("detect someone face to my same direction")
        sentencePresetList.append("detect someone's sphere color is 2")



        
        
    elif txt == "Frustum Range":
        sentencePresetList.append("See someone in left (vision.x)")
        sentencePresetList.append("See someone in right (vision.x)")
        sentencePresetList.append("See someone near (vision.z)")
        sentencePresetList.append("See someone in a color of 2 (vision.h)")
        
    elif txt == "Terrain":
        sentencePresetList.append("Terrain is below my feet (gound)")
        sentencePresetList.append("Terrain is above my feet (gound)")
        sentencePresetList.append("Terrain is downhill (gound.dz)")
        sentencePresetList.append("Terrain is uphill (gound.dz)")
        sentencePresetList.append("Terrain is lean left (gound.dx)")
        sentencePresetList.append("Terrain is lean right (gound.dx)")
        
    elif txt == "Road":
        sentencePresetList.append("Road Flow toward my left (road.flow)")
        sentencePresetList.append("Road Flow toward my right (road.flow)")
        sentencePresetList.append("I'm in middle of right side of road (road.x)")
        sentencePresetList.append("Road Direction toward my left (road.ox)")
        sentencePresetList.append("Road Direction toward my right (road.ox)")
        sentencePresetList.append("The color of road I'm in 2(road.h)")
        sentencePresetList.append(" ")
    
    elif txt == "Bound":
        sentencePresetList.append("I'm in bound (bound.in)")
        
    elif txt == "Spot":
        sentencePresetList.append("There is spot in my left (spot.x)")
        sentencePresetList.append("There is spot in my right (spot.x)")
        sentencePresetList.append("There is spot in distance of (spot.d)")
        
    elif txt == "Zone":
        sentencePresetList.append("There is zone in my left (zone.x)")
        sentencePresetList.append("There is zone in my right (zone.x)")
        sentencePresetList.append("I'm in a zone (zone.in)")
        sentencePresetList.append("A zone is below my feet (zone.hi)")
        sentencePresetList.append("A zone is above my feet (zone.hi)")
        sentencePresetList.append("A zone is 20 distance from me in top view (zone.d2d)")
        sentencePresetList.append("A zone is 20 distance from me in 3d space (zone.d3d)")

    elif txt == "Arrow":
        sentencePresetList.append("Feel a wind blow to left (wind.ox)")
        sentencePresetList.append("Feel a wind blow to right (wind.ox)")
        sentencePresetList.append("Feel a wind strength bigger than 10(wind.a)")
    
    elif txt == "Maya Field":
        sentencePresetList.append("Feel a field point to my left (field.ox)")
        sentencePresetList.append("Feel a field point to my right (field.ox)")
        sentencePresetList.append("Feel a field strength bigger than 10(field.a)")
        
    elif txt == "Physical Collide":
        sentencePresetList.append("Feel RBD collide me (collide)")
        sentencePresetList.append("Feel RBD collide me at bone of (collideAt:<bone>)")
        sentencePresetList.append("Feel RBD collide me by the bone(collideBy:<bone>)")
        
        sentencePresetList.append("RI: Feel RBD collide me (riCollide)")
        sentencePresetList.append("RI: Feel RBD collide me at bone of (riCollideAt:<bone>)")
        sentencePresetList.append("RI: Feel RBD collide me by the bone(riCollideBy:<bone>)")
        
    return sentencePresetList;
    
    
def McdUpdateSubSentenceDetail(sentenceID, dcNode):
    choiceText = cmds.textScrollList("mcdaffllgg_tsl", q = True, si = True)[0]
    
    sentencePresetList = []
    
    sentencePresetList = appendSentences(choiceText)
    
    cmds.textScrollList("mcdaffl_tsl", e = True, ra = True)
    cmds.textScrollList("mcdaffl_tsl", e = True, append = sentencePresetList)



def McdAutoFillSentenceDetail(sentenceID, dcNode):
    choiceText = cmds.textScrollList("mcdaffl_tsl", q = True, si = True)[0]
    sid = str(sentenceID)
    
    # ----------------------------------------------------------------
    # fuzzy reference
    # ----------------------------------------------------------------
    
    # ----------------------------------------------------------------
    # sound
    # ----------------------------------------------------------------
    
    cmds.setAttr(dcNode + ".inputLanguage[" + sid + "]", choiceText, type = "string")
    
    print "xxxxxxxxxxx"
    
    McdParseLanguageFirstTime(choiceText, dcNode, sentenceID)
        
    try:
        winName = "McdDecisionEditor"
        if cmds.window(winName, ex = True):
            McdRefreshDecisionEditor()
        else:
            McdDecisionEditorGUI()
        return
    except:
        pass
    
    
    
    
    
    
    
    
    
    
    
    
    













